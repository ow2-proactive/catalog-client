/*
 * CatalogObjectEntity Catalog API
 * The purpose of the catalog is to store ProActive objects.  A catalog is subdivided into buckets.   Each bucket manages zero, one or more versioned ProActive objects.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ow2.proactive.catalog.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.ow2.proactive.catalog.client.model.JobVariable;
import org.ow2.proactive.catalog.client.model.Link;
import org.ow2.proactive.catalog.client.model.Metadata;

/**
 * CatalogObjectMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-11-26T13:41:32.805+01:00")
public class CatalogObjectMetadata {
  @JsonProperty("bucket_name")
  private String bucketName = null;

  @JsonProperty("commit_message")
  private String commitMessage = null;

  @JsonProperty("commit_time")
  private String commitTime = null;

  @JsonProperty("commit_time_raw")
  private String commitTimeRaw = null;

  @JsonProperty("content_type")
  private String contentType = null;

  @JsonProperty("extension")
  private String extension = null;

  @JsonProperty("kind")
  private String kind = null;

  @JsonProperty("links")
  private List<Link> links = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("object_key_values")
  private List<Metadata> objectKeyValues = null;

  @JsonProperty("project_name")
  private String projectName = null;

  @JsonProperty("username")
  private String username = null;

  @JsonProperty("variables_order")
  private Map<String, Map<String, JobVariable>> variablesOrder = null;

  public CatalogObjectMetadata bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @ApiModelProperty(value = "")
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }

  public CatalogObjectMetadata commitMessage(String commitMessage) {
    this.commitMessage = commitMessage;
    return this;
  }

   /**
   * Get commitMessage
   * @return commitMessage
  **/
  @ApiModelProperty(value = "")
  public String getCommitMessage() {
    return commitMessage;
  }

  public void setCommitMessage(String commitMessage) {
    this.commitMessage = commitMessage;
  }

  public CatalogObjectMetadata commitTime(String commitTime) {
    this.commitTime = commitTime;
    return this;
  }

   /**
   * Get commitTime
   * @return commitTime
  **/
  @ApiModelProperty(value = "")
  public String getCommitTime() {
    return commitTime;
  }

  public void setCommitTime(String commitTime) {
    this.commitTime = commitTime;
  }

  public CatalogObjectMetadata commitTimeRaw(String commitTimeRaw) {
    this.commitTimeRaw = commitTimeRaw;
    return this;
  }

   /**
   * Get commitTimeRaw
   * @return commitTimeRaw
  **/
  @ApiModelProperty(value = "")
  public String getCommitTimeRaw() {
    return commitTimeRaw;
  }

  public void setCommitTimeRaw(String commitTimeRaw) {
    this.commitTimeRaw = commitTimeRaw;
  }

  public CatalogObjectMetadata contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public CatalogObjectMetadata extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @ApiModelProperty(value = "")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public CatalogObjectMetadata kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @ApiModelProperty(value = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public CatalogObjectMetadata links(List<Link> links) {
    this.links = links;
    return this;
  }

  public CatalogObjectMetadata addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public CatalogObjectMetadata name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CatalogObjectMetadata objectKeyValues(List<Metadata> objectKeyValues) {
    this.objectKeyValues = objectKeyValues;
    return this;
  }

  public CatalogObjectMetadata addObjectKeyValuesItem(Metadata objectKeyValuesItem) {
    if (this.objectKeyValues == null) {
      this.objectKeyValues = new ArrayList<>();
    }
    this.objectKeyValues.add(objectKeyValuesItem);
    return this;
  }

   /**
   * Get objectKeyValues
   * @return objectKeyValues
  **/
  @ApiModelProperty(value = "")
  public List<Metadata> getObjectKeyValues() {
    return objectKeyValues;
  }

  public void setObjectKeyValues(List<Metadata> objectKeyValues) {
    this.objectKeyValues = objectKeyValues;
  }

  public CatalogObjectMetadata projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @ApiModelProperty(value = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CatalogObjectMetadata username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public CatalogObjectMetadata variablesOrder(Map<String, Map<String, JobVariable>> variablesOrder) {
    this.variablesOrder = variablesOrder;
    return this;
  }

  public CatalogObjectMetadata putVariablesOrderItem(String key, Map<String, JobVariable> variablesOrderItem) {
    if (this.variablesOrder == null) {
      this.variablesOrder = new HashMap<>();
    }
    this.variablesOrder.put(key, variablesOrderItem);
    return this;
  }

   /**
   * Get variablesOrder
   * @return variablesOrder
  **/
  @ApiModelProperty(value = "")
  public Map<String, Map<String, JobVariable>> getVariablesOrder() {
    return variablesOrder;
  }

  public void setVariablesOrder(Map<String, Map<String, JobVariable>> variablesOrder) {
    this.variablesOrder = variablesOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogObjectMetadata catalogObjectMetadata = (CatalogObjectMetadata) o;
    return Objects.equals(this.bucketName, catalogObjectMetadata.bucketName) &&
        Objects.equals(this.commitMessage, catalogObjectMetadata.commitMessage) &&
        Objects.equals(this.commitTime, catalogObjectMetadata.commitTime) &&
        Objects.equals(this.commitTimeRaw, catalogObjectMetadata.commitTimeRaw) &&
        Objects.equals(this.contentType, catalogObjectMetadata.contentType) &&
        Objects.equals(this.extension, catalogObjectMetadata.extension) &&
        Objects.equals(this.kind, catalogObjectMetadata.kind) &&
        Objects.equals(this.links, catalogObjectMetadata.links) &&
        Objects.equals(this.name, catalogObjectMetadata.name) &&
        Objects.equals(this.objectKeyValues, catalogObjectMetadata.objectKeyValues) &&
        Objects.equals(this.projectName, catalogObjectMetadata.projectName) &&
        Objects.equals(this.username, catalogObjectMetadata.username) &&
        Objects.equals(this.variablesOrder, catalogObjectMetadata.variablesOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketName, commitMessage, commitTime, commitTimeRaw, contentType, extension, kind, links, name, objectKeyValues, projectName, username, variablesOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogObjectMetadata {\n");
    
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    commitMessage: ").append(toIndentedString(commitMessage)).append("\n");
    sb.append("    commitTime: ").append(toIndentedString(commitTime)).append("\n");
    sb.append("    commitTimeRaw: ").append(toIndentedString(commitTimeRaw)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    objectKeyValues: ").append(toIndentedString(objectKeyValues)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    variablesOrder: ").append(toIndentedString(variablesOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

