/*
 * CatalogObjectEntity Catalog API
 * The purpose of the catalog is to store ProActive objects.  A catalog is subdivided into buckets.   Each bucket manages zero, one or more versioned ProActive objects.
 *
 * The version of the OpenAPI document: 1.0\"
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ow2.proactive.catalog.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ow2.proactive.catalog.client.model.BucketGrantMetadata;
import org.ow2.proactive.catalog.client.model.CatalogObjectGrantMetadata;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.ow2.proactive.catalog.client.JSON;


/**
 * AllBucketGrants
 */
@JsonPropertyOrder({
  AllBucketGrants.JSON_PROPERTY_BUCKET_GRANTS,
  AllBucketGrants.JSON_PROPERTY_OBJECT_GRANTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-12T10:49:33.729424-05:00[America/New_York]")
public class AllBucketGrants {
  public static final String JSON_PROPERTY_BUCKET_GRANTS = "bucketGrants";
  private List<BucketGrantMetadata> bucketGrants;

  public static final String JSON_PROPERTY_OBJECT_GRANTS = "objectGrants";
  private List<CatalogObjectGrantMetadata> objectGrants;

  public AllBucketGrants() { 
  }

  public AllBucketGrants bucketGrants(List<BucketGrantMetadata> bucketGrants) {
    this.bucketGrants = bucketGrants;
    return this;
  }

  public AllBucketGrants addBucketGrantsItem(BucketGrantMetadata bucketGrantsItem) {
    if (this.bucketGrants == null) {
      this.bucketGrants = new ArrayList<>();
    }
    this.bucketGrants.add(bucketGrantsItem);
    return this;
  }

   /**
   * Get bucketGrants
   * @return bucketGrants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUCKET_GRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BucketGrantMetadata> getBucketGrants() {
    return bucketGrants;
  }


  @JsonProperty(JSON_PROPERTY_BUCKET_GRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBucketGrants(List<BucketGrantMetadata> bucketGrants) {
    this.bucketGrants = bucketGrants;
  }


  public AllBucketGrants objectGrants(List<CatalogObjectGrantMetadata> objectGrants) {
    this.objectGrants = objectGrants;
    return this;
  }

  public AllBucketGrants addObjectGrantsItem(CatalogObjectGrantMetadata objectGrantsItem) {
    if (this.objectGrants == null) {
      this.objectGrants = new ArrayList<>();
    }
    this.objectGrants.add(objectGrantsItem);
    return this;
  }

   /**
   * Get objectGrants
   * @return objectGrants
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJECT_GRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CatalogObjectGrantMetadata> getObjectGrants() {
    return objectGrants;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_GRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectGrants(List<CatalogObjectGrantMetadata> objectGrants) {
    this.objectGrants = objectGrants;
  }


  /**
   * Return true if this AllBucketGrants object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllBucketGrants allBucketGrants = (AllBucketGrants) o;
    return Objects.equals(this.bucketGrants, allBucketGrants.bucketGrants) &&
        Objects.equals(this.objectGrants, allBucketGrants.objectGrants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketGrants, objectGrants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllBucketGrants {\n");
    sb.append("    bucketGrants: ").append(toIndentedString(bucketGrants)).append("\n");
    sb.append("    objectGrants: ").append(toIndentedString(objectGrants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

